syntax = "proto2";
package agatha;

// Config used to perform topic model queries
message TopicQueryConfig {

  // The first term of this query. This is a graph key
  optional string source = 1;

  // The second term of this query. This is a graph key
  optional string target = 2;

  // The path to the graph sqlite database used to run this query
  optional string graph_db = 3;

  // The path to the sentence sqlite database used to run this query
  optional string bow_db = 4;

  // The number of sentences that are going to be extracted per element of the
  // shortest path between source and target
  optional int32 max_sentences_per_path_elem = 5 [default=2000];

  // Configures the LDA topic model generated from selected sentences
  optional LdaConfig topic_model = 6;

  // Configures how to get the shortest path between source and target
  optional ShortestPathConfig path = 7;

  // Where to store result proto
  optional string result_path = 8 [default="./agatha_query_result.pb"];

  // Is the query runner allows to overwrite an existing result file?
  optional bool override = 9 [default=false];

  // When downloading nodes, this is the maximum number of neighbors a new node
  // is allows to have. High degree nodes will be downsampled to this rate. A
  // higher value indicates a more accurate shortest path, at a longer runtime.
  optional int32 max_degree = 10 [default=1000];

  // If set, we will not preload the graph
  optional bool preload_graph_db = 11 [default=false];

  // If set, we will load the specified hypothesis_predictor and use it to
  // generate `metrics["agatha_ranking_criteria"]` in the output.
  optional HypothesisPredictorConfig hypothesis_predictor = 12;
}


////////////////////////////////////////////////////////////////////////////////
// Helper Messages /////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// Modifies how we perform LDA topics models
message LdaConfig {
  // How many topics to produce
  optional int32 num_topics = 1 [default=20];

  optional int32 random_seed = 2 [default=42];

  // Number of training iterations of LDA
  optional int32 iterations = 3 [default=50];

  // Remove any word that does not occur at least X times
  optional int32 min_support_count = 4 [default=0];

  // Take the top X words per-topic, only effects output
  optional int32 truncate_size = 7 [default=250];
}

// Modifies how to select shortest paths
message ShortestPathConfig {
  // Number of nodes to download at a time.
  optional int32 node_batch = 1 [default=10];
}

// Specifies what HypothesisPredictor model to load to accompany the result.
message HypothesisPredictorConfig {
  // Path to the `model.pt` file containing the pretrained pytorch model.
  // Model should be of type: agatha.ml.hypothesis_predictor.HypothesisPredictor
  optional string model_path = 1;
  // Path to the `graph.sqlite3` or `predicate_graph.sqlite3` database.
  // This typically comes along with an Agatha pretrained model.
  // If not set, we will default to the graph_db of the parent object.
  optional string graph_db = 2;
  // Path to the `entities.sqlite3` or `predicate_entitites.sqlite3` database.
  // This typically comes along with an Agatha pretrained model.
  optional string entity_db = 3;
  // Path to the `embeddings` or `predicate_embeddings` directory that contains
  // files in the form of: `embeddings_<type>_<part>.<version>.h5`
  // This typically comes along with an Agatha pretrained model.
  optional string embedding_dir = 4;

}
