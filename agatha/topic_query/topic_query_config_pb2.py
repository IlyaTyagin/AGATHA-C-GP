# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: agatha/topic_query/topic_query_config.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='agatha/topic_query/topic_query_config.proto',
  package='agatha',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n+agatha/topic_query/topic_query_config.proto\x12\x06\x61gatha\"\xb3\x02\n\x10TopicQueryConfig\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x0e\n\x06target\x18\x02 \x01(\t\x12\x10\n\x08graph_db\x18\x03 \x01(\t\x12\x0e\n\x06\x62ow_db\x18\x04 \x01(\t\x12)\n\x1bmax_sentences_per_path_elem\x18\x05 \x01(\x05:\x04\x32\x30\x30\x30\x12&\n\x0btopic_model\x18\x06 \x01(\x0b\x32\x11.agatha.LdaConfig\x12(\n\x04path\x18\x07 \x01(\x0b\x32\x1a.agatha.ShortestPathConfig\x12-\n\x0bresult_path\x18\x08 \x01(\t:\x18./agatha_query_result.pb\x12\x17\n\x08override\x18\t \x01(\x08:\x05\x66\x61lse\x12\x18\n\nmax_degree\x18\n \x01(\x05:\x04\x31\x30\x30\x30\"\x8e\x01\n\tLdaConfig\x12\x16\n\nnum_topics\x18\x01 \x01(\x05:\x02\x32\x30\x12\x17\n\x0brandom_seed\x18\x02 \x01(\x05:\x02\x34\x32\x12\x16\n\niterations\x18\x03 \x01(\x05:\x02\x35\x30\x12\x1c\n\x11min_support_count\x18\x04 \x01(\x05:\x01\x32\x12\x1a\n\rtruncate_size\x18\x07 \x01(\x05:\x03\x32\x35\x30\",\n\x12ShortestPathConfig\x12\x16\n\nnode_batch\x18\x01 \x01(\x05:\x02\x31\x30')
)




_TOPICQUERYCONFIG = _descriptor.Descriptor(
  name='TopicQueryConfig',
  full_name='agatha.TopicQueryConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='source', full_name='agatha.TopicQueryConfig.source', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target', full_name='agatha.TopicQueryConfig.target', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='graph_db', full_name='agatha.TopicQueryConfig.graph_db', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bow_db', full_name='agatha.TopicQueryConfig.bow_db', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max_sentences_per_path_elem', full_name='agatha.TopicQueryConfig.max_sentences_per_path_elem', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=True, default_value=2000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='topic_model', full_name='agatha.TopicQueryConfig.topic_model', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='path', full_name='agatha.TopicQueryConfig.path', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result_path', full_name='agatha.TopicQueryConfig.result_path', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("./agatha_query_result.pb").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='override', full_name='agatha.TopicQueryConfig.override', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max_degree', full_name='agatha.TopicQueryConfig.max_degree', index=9,
      number=10, type=5, cpp_type=1, label=1,
      has_default_value=True, default_value=1000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=56,
  serialized_end=363,
)


_LDACONFIG = _descriptor.Descriptor(
  name='LdaConfig',
  full_name='agatha.LdaConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num_topics', full_name='agatha.LdaConfig.num_topics', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=True, default_value=20,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='random_seed', full_name='agatha.LdaConfig.random_seed', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=True, default_value=42,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='iterations', full_name='agatha.LdaConfig.iterations', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=True, default_value=50,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='min_support_count', full_name='agatha.LdaConfig.min_support_count', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=True, default_value=2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='truncate_size', full_name='agatha.LdaConfig.truncate_size', index=4,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=True, default_value=250,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=366,
  serialized_end=508,
)


_SHORTESTPATHCONFIG = _descriptor.Descriptor(
  name='ShortestPathConfig',
  full_name='agatha.ShortestPathConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node_batch', full_name='agatha.ShortestPathConfig.node_batch', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=510,
  serialized_end=554,
)

_TOPICQUERYCONFIG.fields_by_name['topic_model'].message_type = _LDACONFIG
_TOPICQUERYCONFIG.fields_by_name['path'].message_type = _SHORTESTPATHCONFIG
DESCRIPTOR.message_types_by_name['TopicQueryConfig'] = _TOPICQUERYCONFIG
DESCRIPTOR.message_types_by_name['LdaConfig'] = _LDACONFIG
DESCRIPTOR.message_types_by_name['ShortestPathConfig'] = _SHORTESTPATHCONFIG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TopicQueryConfig = _reflection.GeneratedProtocolMessageType('TopicQueryConfig', (_message.Message,), dict(
  DESCRIPTOR = _TOPICQUERYCONFIG,
  __module__ = 'agatha.topic_query.topic_query_config_pb2'
  # @@protoc_insertion_point(class_scope:agatha.TopicQueryConfig)
  ))
_sym_db.RegisterMessage(TopicQueryConfig)

LdaConfig = _reflection.GeneratedProtocolMessageType('LdaConfig', (_message.Message,), dict(
  DESCRIPTOR = _LDACONFIG,
  __module__ = 'agatha.topic_query.topic_query_config_pb2'
  # @@protoc_insertion_point(class_scope:agatha.LdaConfig)
  ))
_sym_db.RegisterMessage(LdaConfig)

ShortestPathConfig = _reflection.GeneratedProtocolMessageType('ShortestPathConfig', (_message.Message,), dict(
  DESCRIPTOR = _SHORTESTPATHCONFIG,
  __module__ = 'agatha.topic_query.topic_query_config_pb2'
  # @@protoc_insertion_point(class_scope:agatha.ShortestPathConfig)
  ))
_sym_db.RegisterMessage(ShortestPathConfig)


# @@protoc_insertion_point(module_scope)
